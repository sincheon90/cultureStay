<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.abcde.cultureStay.messenger.MessengerDAO">
    <insert id="createChatRoom" parameterType="map">
        DECLARE
            v_chatRoomId NUMBER;
        BEGIN
            INSERT INTO ChatRooms (chatRoomId, chatRoomName, createdUserId)
            VALUES (ChatRooms_seq.NEXTVAL, #{chatRoomName}, #{createdUser})
            RETURNING chatRoomId INTO v_chatRoomId;

            -- 첫 번째 멤버 추가
            INSERT INTO ChatRoomMembers (chatRoomMemberId, chatRoomId, userId)
            VALUES (ChatRoomMembers_seq.NEXTVAL, v_chatRoomId, #{createdUser});

            -- 두 번째 멤버 추가
            INSERT INTO ChatRoomMembers (chatRoomMemberId, chatRoomId, userId)
            VALUES (ChatRoomMembers_seq.NEXTVAL, v_chatRoomId, #{chatPartner});

            COMMIT;
        END;
    </insert>

    <select id="getChatRoomList" parameterType="String" resultType="ChatRoom">
        select
            cr.chatRoomId,
            cr.chatRoomName,
            cr.createTimestamp,
            cr.createdUserId
        from ChatRoomMembers crm
        join chatrooms cr on crm.chatRoomId = cr.chatRoomId
        where crm.userId = #{username}
    </select>

    <select id="getChatRoom" parameterType="Long" resultType="ChatRoom">
        select * from chatrooms where chatRoomId = #{chatRoomId}
    </select>

    <select id="getMessages" parameterType="Long" resultType="Message">
        select * from messages
        where chatRoomId = #{chatRoomId}
        order by timestamp
    </select>


    <insert id="saveMessage" parameterType="Message">
        INSERT INTO Messages (messageId, chatRoomId, senderId, messageText, isRead, messageType)
        VALUES (Messages_seq.nextval, #{chatRoomId}, #{senderId}, #{messageText}, #{isRead}, #{messageType})
    </insert>

    <select id="getMemberCount" parameterType="Long" resultType="Long">
        SELECT count(distinct userId)
        FROM ChatRoomMembers CM
        WHERE CM.chatRoomId = #{chatRoomId}
    </select>

    <update id="updateIsRead" parameterType="map">
        update Messages set isRead = isRead -1
        where chatRoomId = #{chatRoomId}
        and isRead > 0
        and senderId != #{userId}
    </update>

    <insert id="checkChatRoom" parameterType="map">
        SELECT crm1.chatRoomId
        FROM ChatRoomMembers crm1
        JOIN ChatRoomMembers crm2 ON crm1.chatRoomId = crm2.chatRoomId
        WHERE crm1.userId = #{chatPartner} AND crm2.userId = #{username}
    </insert>
</mapper>