<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.abcde.cultureStay.dao.BoardDAO">

	<select id="countTotal" parameterType="map" resultType="int">
		select count(*) from cultureStay_board
		<if test="type != null and searchWord != null">
			<where>
				<if test="type == 'title'">
					upper(title) like '%' || upper(#{searchWord}) || '%'
				</if>	
				<if test="type == 'contents'">
					upper(contents) like '%' || upper(#{searchWord}) || '%'
				</if>	
				<if test="type == 'userid'">
					userid like '%' || #{searchWord} || '%'
				</if>	
				<if test="type == 'all'">
					upper(title) like '%' || upper(#{searchWord}) || '%'
					or upper(contents) like '%' || upper(#{searchWord}) || '%'
					or userid like '%' || #{searchWord} || '%'
				</if>	
			</where> 
		</if>
	</select>

	<select id="selectList" parameterType="map" resultType="Board">
		select * from cultureStay_board 
		<if test="type != null and searchWord != null">
			<where>
				<if test="type == 'title'">
					upper(title) like '%' || upper(#{searchWord}) || '%'
				</if>	
				<if test="type == 'contents'">
					upper(contents) like '%' || upper(#{searchWord}) || '%'
				</if>	
				<if test="type == 'userid'">
					userid like '%' || #{searchWord} || '%'
				</if>	
				<if test="type == 'all'">
					upper(title) like '%' || upper(#{searchWord}) || '%'
					or upper(contents) like '%' || upper(#{searchWord}) || '%'
					or userid like '%' || #{searchWord} || '%'
				</if>	
			</where> 
		</if>
		order by boardnum desc
	</select>
	
	<insert id="writeBoard" parameterType="Board">
		insert into cultureStay_board
		(
			boardnum
			, userid
			, title
			, contents
			<if test="originalfile != null and savedfile != null">
			, originalfile
			, savedfile
			</if>
		) values (
			cultureStay_boardnum_seq.nextval
			, #{userid}
			, #{title}
			, #{contents}
			<if test="originalfile != null and savedfile != null">
			, #{originalfile}
			, #{savedfile}
			</if>
		)
	</insert>
	
	<select id="readBoard" parameterType="int" resultType="Board">
		select * from cultureStay_board where boardnum = #{boardnum}
	</select>
	
	<update id="updateHits" parameterType="int">
		update 
			cultureStay_board 
		set 
			hits = hits + 1
		where 
			boardnum = #{boardnum}
	</update>
	
	<delete id="deleteBoard" parameterType="Board">
		delete 
			cultureStay_board 
		where 
			userid like #{userid}
			and boardnum = #{boardnum}
	</delete>
	
	<update id="updateBoard" parameterType="Board">
		update
			cultureStay_board
		set
			title = #{title}
			, contents = #{contents}
			<if test="originalfile != null and savedfile != null">
			, originalfile = #{originalfile}
			, savedfile = #{savedfile}
			</if>
		where
			boardnum = #{boardnum}
			and userid = #{userid}
	</update>
	
	<!-- 좋아요 -->
  	<select id="recommendCheck" parameterType="map" resultType="Integer">
			SELECT count(*)
			FROM Board_like
			WHERE boardnum = #{boardnum} AND userid = #{userid}
	</select>
	
	<select id="recommendCnt" parameterType="Integer" resultType="Integer">
			SELECT count(*)
			FROM Board_like
			WHERE boardnum = #{boardnum}
	</select>

	
	
	  
	<insert id="createRecommend" parameterType="map">
		insert into Board_like
			(	b_like_num
				,userid
				,boardnum
			) 
		values (
				b_like_num_seq.nextval
				, #{userid}
				, #{boardnum}
			)
			
	</insert>
	  
	<delete id="deleteRecommend" parameterType="map">
		delete 
			Board_like
		where 
			boardnum = #{boardnum}
			and userid = #{userid}
					
	</delete>

	<update id="updateLikehit" parameterType="int">
	update
		cultureStay_board
	set
		likehit = likehit + 1
	where
		boardnum = #{boardnum}
</update>

<select id="checkLike" parameterType="map" resultType="int">
		select
		count(*)
		from Board_like
		where userid = #{id} and boardnum = #{boardnum}
	</select>

	<insert id="addLike" parameterType="map">
		insert into Board_like (
			b_like_num
			, userid
			, boardnum
		)
		values
		(
			b_like_num_seq.nextval
			, #{id}
			, #{boardnum}
		)
	</insert>

	<update id="upLike" parameterType="int">
		update
		cultureStay_board
		set
		recommend =
		recommend + 1
		where
		boardnum = #{boardnum}
		and recommend > -1
	</update>

	<delete id="deleteLike" parameterType="map">
		delete from Board_like
		where
		userid = #{id} and boardnum = #{boardnum}
	</delete>

	<update id="downLike" parameterType="int">
		update
		cultureStay_board
		set
		recommend
		= recommend - 1
		where
		boardnum = #{boardnum}
		and recommend > -1
	</update>

	<select id="selectCnt" parameterType="int" resultType="int">
		select
		recommend
		from
		cultureStay_board
		where
		boardnum = #{boardnum}
	</select>
	
	<!-- 인기 홈스테이 --><!-- 수정해야댐 -->
	<select id="popularBoards" resultType="Board">
		SELECT B.*
		FROM cultureStay_board B
		LEFT OUTER JOIN (
			SELECT boardNum, COUNT(*) AS recommend_count
			FROM Board_like
			WHERE inputdate >= SYSDATE - 14
			GROUP BY boardNum
		) BL ON B.boardNum = BL.boardNum
		WHERE B.inputdate >= SYSDATE - 14
		ORDER BY BL.recommend_count DESC
	</select>
	

</mapper>